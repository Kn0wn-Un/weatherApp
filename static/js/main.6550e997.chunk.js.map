{"version":3,"sources":["Toggle.js","UserInput.js","Weather.js","App.js","index.js"],"names":["Toggle","props","onClick","units","change","className","style","color","UserInput","useState","search","setSearch","OutlinedInput","id","value","placeholder","onChange","e","target","onKeyUp","key","handleSearch","endAdornment","InputAdornment","position","IconButton","edge","Search","inputProps","Button","variant","size","startIcon","LocationOn","navigator","geolocation","getCurrentPosition","c","useLocation","coords","alert","setUnits","Weather","data","name","weather","description","main","temp","temp_max","temp_min","feels_like","pressure","humidity","visibility","toFixed","wind","deg","speed","sys","sunrise","sunset","App","setData","gotData","setGotData","city","setCity","MYAPIKEY","process","fetchResults","lon","a","fetch","response","lat","ok","json","res","setTime","t","Date","toLocaleTimeString","useEffect","latitude","longitude","ci","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6550e997.chunk.js","sourcesContent":["import './styles.css';\nfunction Toggle(props) {\n    return (\n        <div\n            onClick={() => {\n                props.units === 'metric'\n                    ? props.change('imperial')\n                    : props.change('metric');\n            }}\n            className=\"toggle\"\n        >\n            <h1>Units:</h1>\n            {props.units === 'metric' ? (\n                <div>\n                    <b style={{ color: 'rgb(63, 55, 201)' }}>°C</b>/F\n                </div>\n            ) : (\n                <div>\n                    °C/<b style={{ color: 'rgb(214, 40, 40)' }}>F</b>\n                </div>\n            )}\n        </div>\n    );\n}\nexport default Toggle;\n","import {\n    IconButton,\n    OutlinedInput,\n    InputAdornment,\n    Button,\n} from '@material-ui/core';\nimport { Search, LocationOn } from '@material-ui/icons';\nimport { useState } from 'react';\nimport Toggle from './Toggle';\nimport './styles.css';\nfunction UserInput(props) {\n    const [search, setSearch] = useState('');\n    function getLocation() {\n        navigator.geolocation.getCurrentPosition(\n            (c) => {\n                props.useLocation(c.coords);\n            },\n            () => {\n                alert('Unable to retrieve your location');\n            }\n        );\n    }\n    return (\n        <div className=\"user-input\">\n            <span className=\"search\">\n                <OutlinedInput\n                    id=\"outlined-adornment-weight\"\n                    value={search}\n                    placeholder=\"Bengaluru\"\n                    onChange={(e) => {\n                        setSearch(e.target.value);\n                    }}\n                    onKeyUp={(e) => {\n                        if (e.key === 'Enter') props.handleSearch(search);\n                    }}\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <IconButton\n                                onClick={() => {\n                                    props.handleSearch(search);\n                                }}\n                                edge=\"end\"\n                            >\n                                <Search />\n                            </IconButton>\n                        </InputAdornment>\n                    }\n                    inputProps={{\n                        'aria-label': 'weight',\n                    }}\n                />\n                {' OR '}\n                <span>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        startIcon={<LocationOn />}\n                        onClick={getLocation}\n                    >\n                        USE LOCATION\n                    </Button>\n                </span>\n            </span>\n            <span>\n                <Toggle change={props.setUnits} units={props.units} />\n            </span>\n        </div>\n    );\n}\nexport default UserInput;\n","function Weather(props) {\n    return (\n        <div>\n            <div className=\"place-name\">{props.data.name}</div>\n            <div className=\"info-div\">\n                <div className=\"desc\">{props.data.weather[0].description}</div>\n                <div className=\"divide\">\n                    <div className=\"sep\">\n                        <h2>Weather</h2>\n                        <div>\n                            <b>Current Temperature:</b> {props.data.main.temp}\n                            {props.units === 'metric' ? '°C' : ' F'}\n                        </div>\n                        <div>\n                            <b>Maximum Temperature:</b>{' '}\n                            {props.data.main.temp_max}\n                            {props.units === 'metric' ? '°C' : ' F'}\n                        </div>\n                        <div>\n                            <b>Min Temperature:</b> {props.data.main.temp_min}\n                            {props.units === 'metric' ? '°C' : ' F'}\n                        </div>\n                        <div>\n                            <b>feels like:</b> {props.data.main.feels_like}\n                            {props.units === 'metric' ? '°C' : ' F'}\n                        </div>\n                    </div>\n                    <div className=\"sep right\">\n                        <div>\n                            <b>Pressure:</b> {props.data.main.pressure} hPa\n                        </div>\n                        <div>\n                            <b>Humidity:</b> {props.data.main.humidity}%\n                        </div>\n                        <div>\n                            <b>Visibility:</b>{' '}\n                            {props.units === 'metric'\n                                ? `${props.data.visibility} meters`\n                                : `${(\n                                      props.data.visibility * 0.00062137\n                                  ).toFixed(2)} miles`}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"sep\">\n                    <h2>Winds</h2>\n                    <div>\n                        <b>Direction: </b>\n                        {props.data.wind.deg} degrees\n                    </div>\n                    <div>\n                        <b>Speed:</b> {props.data.wind.speed}\n                        {props.units === 'metric' ? ' meters/sec' : ' miles/hr'}\n                    </div>\n                </div>\n                <div className=\"sep\">\n                    <h2>Sunrise and Sunset</h2>\n                    <div>\n                        <b>Sunrise:</b> {props.data.sys.sunrise}\n                    </div>\n                    <div>\n                        <b>Sunset:</b> {props.data.sys.sunset}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Weather;\n","import { useEffect, useState } from 'react';\nimport UserInput from './UserInput';\nimport Weather from './Weather';\nimport './styles.css';\nfunction App() {\n    const [data, setData] = useState({});\n    const [gotData, setGotData] = useState(false);\n    const [units, setUnits] = useState('imperial');\n    const [city, setCity] = useState('bengaluru');\n    const MYAPIKEY = process.env.REACT_APP_WEATHER_API_KEY;\n    async function fetchResults(c, lon) {\n        let response;\n        if (!lon) {\n            response = await fetch(\n                `https://api.openweathermap.org/data/2.5/weather?q=${c}&appid=${MYAPIKEY}&units=${units}`\n            );\n        } else {\n            let lat = c;\n            response = await fetch(\n                `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${MYAPIKEY}&units=${units}`\n            );\n        }\n        if (!response.ok) {\n            setGotData(false);\n            fetchResults('bengaluru');\n            alert('city not found :(');\n            setCity('bengaluru');\n            return;\n        }\n        const res = await response.json();\n        res.sys.sunrise = setTime(res.sys.sunrise * 1000);\n        res.sys.sunset = setTime(res.sys.sunset * 1000);\n        setData(res);\n        setGotData(true);\n    }\n    function handleSearch(ci) {\n        if (!ci) return;\n        setCity(ci);\n        fetchResults(ci);\n    }\n    function useLocation(c) {\n        setCity(c);\n        fetchResults(c.latitude, c.longitude);\n    }\n    function setTime(t) {\n        let d = new Date(t);\n        return d.toLocaleTimeString();\n    }\n    useEffect(() => {\n        fetchResults('bengaluru');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(() => {\n        if (typeof city === 'object')\n            fetchResults(city.latitude, city.longitude);\n        else fetchResults(city);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [units]);\n    return (\n        <div>\n            <span>\n                <UserInput\n                    handleSearch={handleSearch}\n                    useLocation={useLocation}\n                    setUnits={setUnits}\n                    units={units}\n                />\n            </span>\n            <div className=\"f\">\n                <div className=\"main-div\">\n                    {gotData ? (\n                        <Weather units={units} data={data} />\n                    ) : (\n                        <h1>'Loading...'</h1>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}